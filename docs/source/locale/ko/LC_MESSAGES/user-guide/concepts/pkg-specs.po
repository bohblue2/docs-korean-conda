# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Continuum Analytics
# This file is distributed under the same license as the conda package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conda 4.7.0.post2+1e64239b0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-21 13:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/user-guide/concepts/pkg-specs.rst:3
msgid "Conda package specification"
msgstr "Conda 패키지 사양(specification)"

#: ../../source/user-guide/concepts/pkg-specs.rst:13
msgid "Package metadata"
msgstr "패키지 메타데이터"

#: ../../source/user-guide/concepts/pkg-specs.rst:15
msgid ""
"The ``info/`` directory contains all metadata about a package. Files in "
"this location are not installed under the install prefix. Although you "
"are free to add any file to this directory, conda only inspects the "
"content of the files discussed below."
msgstr ""
"``info/``\ 디렉토리는 패키지에 대한 모든 메타데이터를 포함하고 있습니다. 이 디렉토리 안에"
" 있는 파일들은 ``install``\ 명령어에 의해 설치되지 않습니다. 무슨 파일이든 "
"자유롭게 이 디렉토리에 추가할 수 있지만, conda는 아래에 명시된 파일들만 검사합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:21
msgid "Info"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:23
msgid "files"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:25
msgid "a list of all the files in the package (not included in ``info/``)"
msgstr "패키지 안에있는 모든 파일에 대한 리스트 ( ``info/``\ 는 포함하지 않음)"

#: ../../source/user-guide/concepts/pkg-specs.rst:27
msgid "``index.json``"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:29
msgid ""
"metadata about the package including platform, version, dependencies, and"
" build info"
msgstr ""
"플랫폼, 버전, 의존성(dependencies), 빌드 정보에 관한 메타데이터"

#: ../../source/user-guide/concepts/pkg-specs.rst:49
msgid "``paths.json``"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:51
msgid ""
"a list of files in the package, along with their associated SHA-256, size"
" in bytes, and the type of path (eg. hardlink vs. softlink)"
msgstr ""
"패키지 안에 있는 파일들에 리스트. 리스트에 담긴 파일에 대한 SHA-256 코드와, 파일 크기(사이즈), "
"그리고 경로 유형(예: hardlink vs. softlink)가 포함되어있음."

#: ../../source/user-guide/concepts/pkg-specs.rst:75
msgid "info/index.json"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:77
msgid ""
"This file contains basic information about the package, such as name, "
"version, build string, and dependencies. The content of this file is "
"stored in ``repodata.json``, which is the repository index file, hence "
"the name ``index.json``. The json object is a dictionary containing the "
"keys shown below. The filename of the conda package is composed of the "
"first 3 values, as in: ``<name>-<version>-<build>.tar.bz2``."
msgstr ""
"이 파일은 이름, 버전, 빌드 스트링(build string), 의존성(dependencies)와 "
"같은 패지키에 대한 기본적인 정보가 담겨있습니다. 이 파일에 대한 내용은 ``repodata.json``\ "
"레포지토리 색인파일, 즉 ``index.json``\ 에 저장됩니다. 이 json 객체는 아래에 나온 키를 포함된 사전입니다."
"conda 패키지의 파일 이름은 다음과 같이 처음 3개 값으로 구성됩니다, "
"``<name>-<version>-<build>.tar.bz2``."

#: ../../source/user-guide/concepts/pkg-specs.rst:88
msgid "**Key**"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:89
msgid "**Type**"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:90
msgid "**Description**"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:92
msgid "name"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:93
#: ../../source/user-guide/concepts/pkg-specs.rst:98
#: ../../source/user-guide/concepts/pkg-specs.rst:104
#: ../../source/user-guide/concepts/pkg-specs.rst:136
#: ../../source/user-guide/concepts/pkg-specs.rst:144
msgid "string"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:94
msgid "The lowercase name of the package. May contain the \"-\" character."
msgstr "패지키의 소문자 이름. \"-\"을 포함할 수 있습니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:97
msgid "version"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:99
msgid ""
"The package version. May not contain \"-\". Conda acknowledges `PEP 440 "
"<https://www.python.org/dev/peps/pep-0440/>`_."
msgstr ""
"패키지의 버전. \"-\"를 포함할 수 없습니다. "
"`PEP 440 <https://www.python.org/dev/peps/pep-0440/>`_\ 참조."

#: ../../source/user-guide/concepts/pkg-specs.rst:103
msgid "build"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:105
msgid ""
"The build string. May not contain \"-\". Differentiates builds of "
"packages with otherwise identical names and versions, such as:"
msgstr ""
"빌드 스트링. \"-\"를 포함할 수 없습니다. 아래와 같이 다른 이름과 버전을 사용하여"
"패키지 빌드들을 차별화 합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:109
msgid "A build with other dependencies, such as Python 3.4 instead of Python 2.7."
msgstr "Python 2.7 대신 Python 3.4 와 같이 다른 의존성들(dependencies)을 가진 빌드."

#: ../../source/user-guide/concepts/pkg-specs.rst:111
msgid "A bug fix in the build process."
msgstr "빌드 프로세스 중 버그 수정."

#: ../../source/user-guide/concepts/pkg-specs.rst:112
msgid ""
"Some different optional dependencies, such as MKL versus ATLAS linkage. "
"Nothing in conda actually inspects the build string. Strings such as "
"``np18py34_1`` are designed only for human readability and conda never "
"parses them."
msgstr ""
"MKL 대 ATLAS 링키지(linkage)처럼 다른 선택적 의존성. "
"conda는 빌드 스트링(build string)을 실제로 검사하지 않습니다. 예를들어 "
"``np18py34_1``\ 처럼 개발자의 가독성과 conda를 위해 디자인된 빌드 스트링은 "
"구문 분석(parse)되지 않습니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:118
msgid "build_number"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:119
msgid "integer"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:120
msgid "A non-negative integer representing the build number of the package."
msgstr "패키지의 빌드 넘버(양수)"

#: ../../source/user-guide/concepts/pkg-specs.rst:123
msgid ""
"Unlike the build string, the build_number is inspected by conda. Conda "
"uses it to sort packages that have otherwise identical names and versions"
" to determine the latest one. This is important because new builds that "
"contain bug fixes for the way a package is built may be added to a "
"repository."
msgstr ""
"빌드 스트링(build string)과 달리 빌드 넘버(build number)는 conda 가 검사합니다. "
"Conda는 이것을 통해 다른 이름과 버전이 있는 패키지들을 정렬하고 최신 버전을 판별합니다. "
"이는 패키지 빌드 방식에 대한 버그 수정을 포함하는 새로운 빌드가 저장소에 추가 될 수 있기 때문에 중요합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:130
msgid "depends"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:131
msgid "list of strings"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:132
msgid ""
"A list of dependency specifications, where each element is a string, as "
"outlined in :ref:`build-version-spec`."
msgstr ""
":ref:`build-version-spec`\ 에 설명된 바와 같이 각 요소들이 문자열로 구성된 "
"의존성 사양에 대한 리스트"

#: ../../source/user-guide/concepts/pkg-specs.rst:135
msgid "arch"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:137
msgid "Optional. The architecture the package is built for."
msgstr "선택적, 패키지가 빌드 되는 아키텍쳐"

#: ../../source/user-guide/concepts/pkg-specs.rst:139
msgid "EXAMPLE: ``x86_64``"
msgstr "예: ``x86_64``"

#: ../../source/user-guide/concepts/pkg-specs.rst:141
msgid "Conda currently does not use this key."
msgstr "Conda 는 현재 이 키를 지원하지 않습니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:143
msgid "platform"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:145
msgid "Optional. The OS that the package is built for."
msgstr "선택적, 패키지가 빌드 되는 운영체제"

#: ../../source/user-guide/concepts/pkg-specs.rst:147
msgid "EXAMPLE: ``osx``"
msgstr "예: ``osx``"

#: ../../source/user-guide/concepts/pkg-specs.rst:149
msgid ""
"Conda currently does not use this key. Packages for a specific "
"architecture and platform are usually distinguished by the repository "
"subdirectory that contains them---see :ref:`repo-si`."
msgstr ""
"Conda 는 현재 이 키를 지원하지 않습니다. 특정 아키텍쳐, 운영체제에 대한 패키지는 "
"보통 패지키를 포함하는 레포지토리 서브 디렉토리(subdirectory)에 의해 구분되어집니다. "
"자세한 정보는 :ref:`repo-si`\ 를 참조해보십시오."

#: ../../source/user-guide/concepts/pkg-specs.rst:155
msgid "info/files"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:157
msgid ""
"Lists all files that are part of the package itself, 1 per line. All of "
"these files need to get linked into the environment. Any files in the "
"package that are not listed in this file are not linked when the package "
"is installed. The directory delimiter for the files in ``info/files`` "
"should always be \"/\", even on Windows. This matches the directory "
"delimiter used in the tarball."
msgstr ""
"패키지 자체에 포함 된 모든 파일을 한 줄에 하나씩 나열합니다. "
"이 파일들은 모두 환경에 링크되어야합니다. 이 파일에 나열되지 않은 패키지의 모든 파일은"
"패키지 설치시 링크되지 않습니다. ``info/files``\ 파일의 디렉토리 분리 문자는 Windows 에서도"
"항상 \"/\"이어야합니다. 이것은 tarball에 사용 된 디렉토리 분리 문자와 일치합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:167
msgid "info/has_prefix"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:169
msgid ""
"Optional file. Lists all files that contain a hard-coded build prefix or "
"placeholder prefix, which needs to be replaced by the install prefix at "
"installation time."
msgstr ""
"선택적 파일. 하드 코딩 된 빌드 접두사(prefix) 또는 플레이스 홀더(placeholder) 접두사"
"가 들어있는 모든 파일을 나열합니다.이 파일은 설치시 설치(install) 접두사로 교체해야합니다."


#: ../../source/user-guide/concepts/pkg-specs.rst:174
msgid ""
"Due to the way the binary replacement works, the placeholder prefix must "
"be longer than the install prefix."
msgstr ""
"바이너리 교체 작업이 작동하는 방식 때문에, 플레이스 홀더(placeholder) 접두사(prefix)는 "
"설치(install) 접두사 보다 길어야 합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:177
msgid ""
"Each line of this file should be either a path, in which case it is "
"considered a text file with the default placeholder "
"``/opt/anaconda1anaconda2anaconda3``, or a space-separated list of "
"placeholder, mode, and path, where:"
msgstr ""
"이 파일의 각 행은 모두 경로여야 하며, 이 경우 경로는 기본 플레이스 홀더(default place holder)"
" ``/opt/anaconda1anaconda2anaconda3``\ 를 가진 텍스트 파일 이거나, 공백으로 분리된 "
"플레이스 홀더, 모드(Mode), 경로의 목록으로 간주됩니다:"

#: ../../source/user-guide/concepts/pkg-specs.rst:182
msgid "Placeholder is the build or placeholder prefix."
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:183
msgid "Mode is either ``text`` or ``binary``."
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:184
msgid "Path is the relative path of the file to be updated."
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:186
msgid "EXAMPLE: On Windows::"
msgstr "예: Windows::"

#: ../../source/user-guide/concepts/pkg-specs.rst:192
msgid "EXAMPLE: On macOS or Linux::"
msgstr "예: macOS 혹은 Linux"

#: ../../source/user-guide/concepts/pkg-specs.rst:199
msgid ""
"The directory delimiter for the relative path must always be \"/\", even "
"on Windows. The placeholder may contain either \"\\\\\" or \"/\" on "
"Windows, but the replacement prefix will match the delimiter used in the "
"placeholder. The default placeholder ``/opt/anaconda1anaconda2anaconda3``"
" is an exception, being replaced with the install prefix using the native"
" path delimiter. On Windows, the placeholder and path always appear in "
"quotes to support paths with spaces."
msgstr ""
"상대 경로에 대한 디렉토리 구분자는 반드시 \"/\" 여야 합니다, Windows 도 마찬가지 입니다."
"플레이스 홀더(placeholder)는 윈도우 환경에서 \"\\\\\" 나 \"/\"을 포함할 수 있지만, "
"교체 접두사(replacement prefix)에서 사용되는 구분자와 일치해야 합니다."
"기본 플레이스 홀더 ``/opt/anaconda1anaconda2anaconda3``\ 는 예외입니다. 이것은 기본 경로 구분자"
"(native path delimiter)를 사용하여 설치 접두사(prefix)로 대체됩니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:209
msgid "info/license.txt"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:211
msgid "Optional file. The software license for the package."
msgstr "선택적 파일. 패키지에 사용되는 소프트웨어 라이센스"

#: ../../source/user-guide/concepts/pkg-specs.rst:214
msgid "info/no_link"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:216
msgid ""
"Optional file. Lists all files that cannot be linked - either soft-linked"
" or hard-linked - into environments and are copied instead."
msgstr ""
"선택적 파일. 환경으로 링크 할 수 없는 파일들(soft-linked, 혹은 hard-linked)이나 "
"복사되어질 수 있는 파일들을 나열합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:221
msgid "info/about.json"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:223
msgid ""
"Optional file. Contains the entries in the :ref:`about-section` of the "
"``meta.yaml`` file. The following keys are added to ``info/about.json`` "
"if present in the build recipe:"
msgstr ""
"선택적 파일. :ref:`about-section`\ 의 ``meta.yaml``\ 파일 안에 있는 모든 엔트리들"
"을 포함합니다. 만약 현재 빌드 레시피(build recipe) 중이라면, "
"아래의 키 들은 ``info/about.json``\ 에 추가됩니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:227
msgid "home."
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:228
msgid "dev_url."
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:229
msgid "doc_url."
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:230
msgid "license_url."
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:231
msgid "license."
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:232
msgid "summary."
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:233
msgid "description."
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:234
msgid "license_family."
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:237
msgid "info/recipe"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:239
msgid "A directory containing the full contents of the build recipe."
msgstr "빌드 레시피(build recipe)의 모든 내용을 담고있는 디렉토리"

#: ../../source/user-guide/concepts/pkg-specs.rst:242
msgid "meta.yaml.rendered"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:244
msgid "The fully rendered build recipe. See `./commands/build/conda-render`."
msgstr "완전히 랜더링 된 빌드 레시피(fully rendered build recipe). `./commands/build/conda-render`\ 을 참조하십시오. "

#: ../../source/user-guide/concepts/pkg-specs.rst:247
msgid ""
"This directory is present only when the the include_recipe flag is "
"``True`` in the :ref:`meta-build`."
msgstr ""
"이 디렉토리는 :ref:`meta-build`\ 에서 include_recipe flag가 ``True``\ 일 때만"
"생성됩니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:254
msgid "Repository structure and index"
msgstr "레포지토리 구조와 색인"

#: ../../source/user-guide/concepts/pkg-specs.rst:256
msgid ""
"A conda repository - or channel - is a directory tree, usually served "
"over HTTPS, which has platform subdirectories, each of which contain "
"conda packages and a repository index. The index file ``repodata.json`` "
"lists all conda packages in the platform subdirectory. Use ``conda "
"index`` to create such an index from the conda packages within a "
"directory. It is simple mapping of the full conda package filename to the"
" dictionary object in ``info/index.json`` described in :doc:`link-"
"scripts`."
msgstr ""
"Conda 레포지토리 (혹은 채널)는 일반적으로 HTTP를 통해 제공되는 디렉토리 트리(directory tree)이며 "
"각 디렉토리에는 conda 패키지와 레포지토리 색인이 들어있는 플랫폼 하위 디렉토리가 있습니다. "
"색인 파일 ``repodata.json``\ 은 플랫폼 하위 디렉토리의 모든 conda 패키지들을 나열합니다."
"Conda 패키지 디렉토리 안에서 ``conda index``\ 명령어를 통해 이러한 색인을 만들 수 있습니다."
"이것은 전체 conda 패키지 이름을 ``info/index.json``\ 안에 있는 사전 객체에 간단하게 매핑 시킬 수 있습니다."
"매핑에 대해 알아보시려면 :doc:`link-scripts`\ 을 참조해 보십시오."

#: ../../source/user-guide/concepts/pkg-specs.rst:265
msgid ""
"In the following example, a repository provides the conda package "
"``misc-1.0-np17py27_0.tar.bz2`` on 64-bit Linux and 32-bit Windows::"
msgstr ""
"아래의 예제를 통해 레포지토리가 conda 패키지 ``misc-1.0-np17py27_0.tar.bz2``\ 를 "
"64-bit Linux 와 32-bit Windows에 제공하는 것을 볼수 있습니다::"

#: ../../source/user-guide/concepts/pkg-specs.rst:277
msgid ""
"Both conda packages have identical filenames and are distinguished only "
"by the repository subdirectory that contains them."
msgstr ""
"두 conda 패키지는 동일한 파일 이름을 가지고 있으며"
"이들을 포함하는 저장소 서브 디렉토리에서만 구별됩니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:285
msgid "Package match specifications"
msgstr "패키지 일치 스펙(match specifications)"

#: ../../source/user-guide/concepts/pkg-specs.rst:287
msgid ""
"This match specification is not the same as the syntax used at the "
"command line with ``conda install``, such as ``conda install "
"python=3.4``. Internally, conda translates the command line syntax to the"
" spec defined in this section."
msgstr ""
"이 일치 스펙(match specifications)은 명령행에서 사용되는 구문 ``conda install``\ 과 동일하지 않습니다."
"내부적으로 conda 는 명령행 구문을 이 절에서 정의된 스펙으로 변환합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:292
msgid "EXAMPLE: python=3.4 is translated to python 3.4*."
msgstr "예: python=3.4 는 python3.4.* 으로 변환됩니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:294
msgid ""
"Package dependencies are specified using a match specification. A match "
"specification is a space-separated string of 1, 2, or 3 parts:"
msgstr ""
"패키지 의존성은 일치 스펙(match specifications)을 사용하여 지정합니다. 일치 스펙은 공백으로 구분 된 하나, 둘 또는"
"세 부분으로 된 문자열입니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:298
msgid "The first part is always the exact name of the package."
msgstr "첫번째 부분은 항상 패키지의 정확한 이름입니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:300
msgid "The second part refers to the version and may contain special characters:"
msgstr "두번째 부분은 버전을 나타내며 특수 문자를 포함 할 수 있습니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:303
msgid "\\| means OR."
msgstr "\\| 는 OR 을 의미합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:305
msgid "EXAMPLE: ``1.0|1.2`` matches version 1.0 or 1.2"
msgstr "예: ``1.0|1.2``\ 는 1.0 또는 1.2 와 일치합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:307
msgid ""
"\\* matches 0 or more characters in the version string. In terms of "
"regular expressions, it is the same as ``r'.*'``."
msgstr ""
"\\* 은 버전 문자열에서 0개 이상의 문자와 일치합니다. 정규 표현식의 관점에서"
"이것은 ``r'.*'``\ 와 동일합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:310
msgid "EXAMPLE: 1.0|1.4* matches 1.0, 1.4 and 1.4.1b2, but not 1.2."
msgstr "예: 1.0|1.4* 는 1.0, 1.4 그리고 1.4.1b2 일치합니다, 그러나 1.2.와는 일치하지 않습니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:312
msgid ""
"<, >, <=, >=, == and != are relational operators on versions, which are "
"compared using `PEP-440 <https://www.python.org/dev/peps/pep-0440/>`_.  "
"For example, ``<=1.0`` matches ``0.9``, ``0.9.1``, and ``1.0``, but not "
"``1.0.1``. ``==`` and ``!=`` are exact equality."
msgstr ""
"<, >, <=, >=, == 그리고 != 는 `PEP-440 <https://www.python.org/dev/peps/pep-0440/>`_\"
"을 사용하는 관계 연산자입니다. 예를 들어, ``<=1.0``\ 은 ``0.9``, ``0.9.1``, ``1.0``\ 와 일치하지만 "
"``1.0.1`` 과는 일치하지 않습니다. ``==``\ 와 ``!=``\ 은 기존 개념과 동일합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:318
msgid ""
"Pre-release versioning is also supported such that ``>1.0b4`` will match "
"``1.0b5`` and ``1.0rc1`` but not ``1.0b4`` or ``1.0a5``."
msgstr ""
"프리-릴리즈(pre-release) 버전 또한 지원합니다. ``>1.0b4``\ 는 ``1.0b5``\ 와 ``1.0rc1``\ 과 일치하지만 "
"``1.0b4``\ 혹은 ``1.0a5``\ 와는 일치하지 않습니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:321
msgid "EXAMPLE: <=1.0 matches 0.9, 0.9.1, and 1.0, but not 1.0.1."
msgstr "예: <=1.0 은 0.9, 0.9.1 그리고 1.0 과 일치하지만 1.0.1 과는 일치하지않습니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:323
msgid ", means AND."
msgstr ", 는 AND를 의미합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:325
msgid ""
"EXAMPLE: >=2,<3 matches all packages in the 2 series. 2.0, 2.1 and 2.9 "
"all match, but 3.0 and 1.0 do not."
msgstr ""
"예: >=2,<3 은 모든 2 버전의 패키지(2.0, 2.1 ... 2.9)와 일치합니다."
"그러나, 3.0 그리고 1.0과는 일치하지 않습니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:328
msgid ""
", has higher precedence than \\|, so >=1,<2|>3 means greater than or "
"equal to 1 AND less than 2 or greater than 3, which matches 1, 1.3 and "
"3.0, but not 2.2."
msgstr ""
", 은 \\| 보다 높은 우선순위를 가지고있습니다, 따라서 >=1, <2|>3 은 1 버전 이상이고"
"2 버전 미만인 버전을 의미하거나, 혹은 3버전 이상인 버전을 의미합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:332
msgid ""
"Conda parses the version by splitting it into parts separated by \\|. If "
"the part begins with <, >, =, or !, it is parsed as a relational "
"operator. Otherwise, it is parsed as a version, possibly containing the "
"\"*\" operator."
msgstr ""
"Conda는 버전을 |로 구분 된 부분으로 분리하여 구문 분석합니다. "
"나누어진 부분이 <,>, = 또는!로 시작하면 관계 연산자로 구문 분석됩니다. "
"그렇지 않으면 \"*\"연산자를 포함 할 수있는 버전으로 구문 분석됩니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:337
msgid ""
"The third part is always the exact build string. When there are 3 parts, "
"the second part must be the exact version."
msgstr ""
"세 번째 부분은 항상 정확한 빌드 문자열입니다. 세 부분이있는 경우, "
"두 번째 부분은 정확한 버전이어야합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:340
msgid ""
"Remember that the version specification cannot contain spaces, as spaces "
"are used to delimit the package, version, and build string in the whole "
"match specification. ``python >= 2.7`` is an invalid match specification."
" Furthermore, ``python>=2.7`` is matched as any version of a package "
"named ``python>=2.7``."
msgstr ""
"공백은 패키지, 버전 및 전체 일치 사양의 빌드 문자열을 구분하는 데 사용되므로 "
"버전 사양에는 공백이 포함될 수 없습니다. ``python >= 2.7``\ 은 잘못된 일치 사양입니다."
" 또한 ``python>=2.7``\ 구문은 ``python>=2.7``\ 라는 이름으로 지정된 패키지의 모든 버전과 일치합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:346
msgid ""
"When using the command line, put double quotes around any package version"
" specification that contains the space character or any of the following "
"characters: <, >, \\*, or \\|."
msgstr ""
"명령 행을 사용할때 공백, <, >, \\*, \\| 이 포함된 패키지 버전을 스펙을 명시 한다면"
"큰 따옴표로 묶어서 사용하십시오."

#: ../../source/user-guide/concepts/pkg-specs.rst:350
msgid "EXAMPLE::"
msgstr "예::"

#: ../../source/user-guide/concepts/pkg-specs.rst:360
msgid "Examples"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:362
msgid "The OR constraint \"numpy=1.11.1|1.11.3\" matches with 1.11.1 or 1.11.3."
msgstr "OR 제약 조건 \"numpy=1.11.1|1.11.3\"은 1.11.1 혹은 1.11.3과 일치합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:365
msgid "The AND constraint \"numpy>=1.8,<2\" matches with 1.8 and 1.9 but not 2.0."
msgstr "AND 제약 조건 \"numpy>=1.8, <2\"는 1.8, 1.9 와 일치하지만 2.0과는 일치하지 않습니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:368
msgid ""
"The fuzzy constraint numpy=1.11 matches 1.11, 1.11.0, 1.11.1, 1.11.2, "
"1.11.18, and so on."
msgstr ""
"퍼지 제약 조건 numpy=1.11 은 1.11, 1.11.0, 1.11.1, 1.11.2, "
"1.11.18, ... 1.11.* 과 일치합니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:371
msgid ""
"The exact constraint numpy==1.11 matches 1.11, 1.11.0, 1.11.0.0, and so "
"on."
msgstr ""
"정확한 제약 조건 numpy==1.1 은 1.11, 1.11.0, 1.11.0.0, (계속) 과 일치합니다."


#: ../../source/user-guide/concepts/pkg-specs.rst:374
msgid ""
"The build string constraint \"numpy=1.11.2=*nomkl*\" matches the NumPy "
"1.11.2 packages without MKL but not the normal MKL NumPy 1.11.2 packages."
msgstr ""
"빌드 스트링(build string) 제약 조건 \"numpy=1.11.2=*nomkl*\"은 MKL 이 없는 NumPy 1.11.2"
"패키지 와 일치합니다, 이것은 일반적인 MKL NumPy 1.11.2 패키지와 다릅니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:378
msgid ""
"The build string constraint \"numpy=1.11.1|1.11.3=py36_0\" matches NumPy "
"1.11.1 or 1.11.3 built for Python 3.6 but not any versions of NumPy built"
" for Python 3.5 or Python 2.7."
msgstr ""
"빌드 스트링(build string) 제약 조건 \"numpy=1.11.1|1.11.3=py36_0\" 은 Python 3.6 버전 Numpy"
"1.11.1 혹은 1.11.3 과 일치하지만 Python 3.5 혹은 Python 2.7 의 Numpy 1.11.1, 1.11.3과 다릅니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:382
msgid "The following are all valid match specifications for numpy-1.8.1-py27_0:"
msgstr "아래의 행들은 numpy-1.8.1-py27_0 에 대한 유효한 일치 스펙(match specifications) 입니다."

#: ../../source/user-guide/concepts/pkg-specs.rst:385
msgid "numpy"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:386
msgid "numpy 1.8*"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:387
msgid "numpy 1.8.1"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:388
msgid "numpy >=1.8"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:389
msgid "numpy ==1.8.1"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:390
msgid "numpy 1.8|1.8*"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:391
msgid "numpy >=1.8,<2"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:392
msgid "numpy >=1.8,<2|1.9"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:393
msgid "numpy 1.8.1 py27_0"
msgstr ""

#: ../../source/user-guide/concepts/pkg-specs.rst:394
msgid "numpy=1.8.1=py27_0"
msgstr ""

